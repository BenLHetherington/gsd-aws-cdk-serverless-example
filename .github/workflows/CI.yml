name: CI

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master
      - bugfix/*
      - feature/*

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

# env:
#   IMAGE_NAME: go-hello-world

jobs:

  build:
    
    runs-on: ubuntu-latest
    # if: github.event_name == 'push'

    steps:
    - name: checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Prep Configs
      run: | 
        make _prep-env-ci
      env:
        THREE_M_DOMAIN: ${{ secrets.THREE_M_DOMAIN }}
        THREE_M_HOSTED_ZONE_NAME: ${{ secrets.THREE_M_HOSTED_ZONE_NAME }}
        THREE_M_HOSTED_ZONE_ID: ${{ secrets.THREE_M_HOSTED_ZONE_ID }}
        REACT_APP_USER_API_DOMAIN: ${{ secrets.REACT_APP_USER_API_DOMAIN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

    - uses: satackey/action-docker-layer-caching@v0.0.11
      # Ignore the failure of a step and avoid terminating the job.
      continue-on-error: true

    - name: Install
      run: |
        make install

    - name: Frontend Unit Tests
      id: frontend_unit_tests
      run: make test-frontend
      
    - name: Backend Unit Tests
      id: backend_unit_tests
      if: success() || steps.frontend_unit_tests.outcome == 'failure' #Run backend unit tests even if frontend tests fail
      run: make test-backend

    #Need to get tests hitting API to work
    # - name: Local e2e test
    #   run: | 
    #     make run > /dev/null 2>&1 & 
    #     make test-e2e-ci

    - name: Infra Unit Tests
      run: make test-infra

    - uses: codecov/codecov-action@v2
      if: always()
      continue-on-error: true
      with:
        # token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
        files: ./backend/coverage.xml,./frontend/coverage/clover.xml
        flags: unittests # optional
        # name: codecov-umbrella # optional
        fail_ci_if_error: true # optional (default = false)

    - name: Build
      run: make ci

    - name: Infra Diff
      run: make diff
      env:
        THREE_M_DOMAIN: ${{ secrets.THREE_M_DOMAIN }}
        THREE_M_HOSTED_ZONE_NAME: ${{ secrets.THREE_M_HOSTED_ZONE_NAME }}
        THREE_M_HOSTED_ZONE_ID: ${{ secrets.THREE_M_HOSTED_ZONE_ID }}
        REACT_APP_USER_API_DOMAIN: ${{ secrets.REACT_APP_USER_API_DOMAIN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

    - name: Deploy
      run: make deploy

    # - name: SonarCloud Scan
    #   uses: sonarsource/sonarcloud-github-action@v1.6
    #   env:
    #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}